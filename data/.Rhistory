lines(x,abs(drv2),col=2)
for (i in 1:length(t_samp)){
abline(v=t_samp[i])
}
lengthout<-8
t<-seq(0.01,1,length.out =lengthout)
p<-length(t)
s<-t-c(0,t[-p])
rho=0.5
sigma2=0.02^2
set.seed(1)
rs<-hjkb(c(rho,sigma2,s), opt,
lower=c(rho,sigma2,c(0,rep(0.05,length(s)-1))),
upper=c(rho,sigma2,rep(Inf,length(s))))
t_samp<-cumsum(rs$par[-c(1:2)])
t_u<-seq(0,1,length.out = lengthout)
inf1<-inf2<-inf3<-inf4<-rep(0,100)
for (seed in 1:100){
set.seed(seed)
theta1<-1
theta2<--10
theta3<-5
eta1<-theta1/(1+exp(theta2*t_samp+theta3))+rnorm(length(t_samp),0,sqrt(sigma2))
m1<-nls(eta1~theta1/(1+exp(theta3+theta2*t_samp)),
start=list(theta1=1, theta2=-10, theta3=5))
inf1[seed]<-(-coef(m1)[3]/coef(m1)[2]-0.5)^2
eta3<-theta1/(1+exp(theta2*t_u+theta3))+rnorm(length(t_u),0,sqrt(sigma2))
m3<-nls(eta3~theta1/(1+exp(theta3+theta2*t_u)),
start=list(theta1=1, theta2=-10, theta3=5))
inf3[seed]<-(-coef(m3)[3]/coef(m3)[2]-0.5)^2
theta1<-1
theta2<--9
theta3<-6
eta2<-theta1/(1+exp(theta2*t_samp+theta3))+rnorm(length(t_samp),0,sqrt(sigma2))
m2<-nls(eta2~theta1/(1+exp(theta3+theta2*t_samp)),
start=list(theta1=1, theta2=-9, theta3=6))
inf2[seed]<-(-coef(m2)[3]/coef(m2)[2]-6/9)^2
eta4<-theta1/(1+exp(theta2*t_u+theta3))+rnorm(length(t_u),0,sqrt(sigma2))
m4<-nls(eta4~theta1/(1+exp(theta3+theta2*t_u)),
start=list(theta1=1, theta2=-9, theta3=6))
inf4[seed]<-(-coef(m4)[3]/coef(m4)[2]-6/9)^2
}
mean(inf1)
mean(inf2)
mean(inf3)
mean(inf4)
round(t_u,2)
round(t_samp,2)
plot(x,abs(drv1),ylim=c(0,20))
lines(x,abs(drv2),col=2)
for (i in 1:length(t_samp)){
abline(v=t_samp[i])
}
lengthout<-9
t<-seq(0.01,1,length.out =lengthout)
p<-length(t)
s<-t-c(0,t[-p])
rho=0.5
sigma2=0.02^2
set.seed(1)
rs<-hjkb(c(rho,sigma2,s), opt,
lower=c(rho,sigma2,c(0,rep(0.05,length(s)-1))),
upper=c(rho,sigma2,rep(Inf,length(s))))
t_samp<-cumsum(rs$par[-c(1:2)])
t_u<-seq(0,1,length.out = lengthout)
inf1<-inf2<-inf3<-inf4<-rep(0,100)
for (seed in 1:100){
set.seed(seed)
theta1<-1
theta2<--10
theta3<-5
eta1<-theta1/(1+exp(theta2*t_samp+theta3))+rnorm(length(t_samp),0,sqrt(sigma2))
m1<-nls(eta1~theta1/(1+exp(theta3+theta2*t_samp)),
start=list(theta1=1, theta2=-10, theta3=5))
inf1[seed]<-(-coef(m1)[3]/coef(m1)[2]-0.5)^2
eta3<-theta1/(1+exp(theta2*t_u+theta3))+rnorm(length(t_u),0,sqrt(sigma2))
m3<-nls(eta3~theta1/(1+exp(theta3+theta2*t_u)),
start=list(theta1=1, theta2=-10, theta3=5))
inf3[seed]<-(-coef(m3)[3]/coef(m3)[2]-0.5)^2
theta1<-1
theta2<--9
theta3<-6
eta2<-theta1/(1+exp(theta2*t_samp+theta3))+rnorm(length(t_samp),0,sqrt(sigma2))
m2<-nls(eta2~theta1/(1+exp(theta3+theta2*t_samp)),
start=list(theta1=1, theta2=-9, theta3=6))
inf2[seed]<-(-coef(m2)[3]/coef(m2)[2]-6/9)^2
eta4<-theta1/(1+exp(theta2*t_u+theta3))+rnorm(length(t_u),0,sqrt(sigma2))
m4<-nls(eta4~theta1/(1+exp(theta3+theta2*t_u)),
start=list(theta1=1, theta2=-9, theta3=6))
inf4[seed]<-(-coef(m4)[3]/coef(m4)[2]-6/9)^2
}
mean(inf1)
mean(inf2)
mean(inf3)
mean(inf4)
lengthout<-10
t<-seq(0.01,1,length.out =lengthout)
p<-length(t)
s<-t-c(0,t[-p])
rho=0.5
sigma2=0.02^2
set.seed(1)
rs<-hjkb(c(rho,sigma2,s), opt,
lower=c(rho,sigma2,c(0,rep(0.05,length(s)-1))),
upper=c(rho,sigma2,rep(Inf,length(s))))
t_samp<-cumsum(rs$par[-c(1:2)])
t_u<-seq(0,1,length.out = lengthout)
inf1<-inf2<-inf3<-inf4<-rep(0,100)
for (seed in 1:100){
set.seed(seed)
theta1<-1
theta2<--10
theta3<-5
eta1<-theta1/(1+exp(theta2*t_samp+theta3))+rnorm(length(t_samp),0,sqrt(sigma2))
m1<-nls(eta1~theta1/(1+exp(theta3+theta2*t_samp)),
start=list(theta1=1, theta2=-10, theta3=5))
inf1[seed]<-(-coef(m1)[3]/coef(m1)[2]-0.5)^2
eta3<-theta1/(1+exp(theta2*t_u+theta3))+rnorm(length(t_u),0,sqrt(sigma2))
m3<-nls(eta3~theta1/(1+exp(theta3+theta2*t_u)),
start=list(theta1=1, theta2=-10, theta3=5))
inf3[seed]<-(-coef(m3)[3]/coef(m3)[2]-0.5)^2
theta1<-1
theta2<--9
theta3<-6
eta2<-theta1/(1+exp(theta2*t_samp+theta3))+rnorm(length(t_samp),0,sqrt(sigma2))
m2<-nls(eta2~theta1/(1+exp(theta3+theta2*t_samp)),
start=list(theta1=1, theta2=-9, theta3=6))
inf2[seed]<-(-coef(m2)[3]/coef(m2)[2]-6/9)^2
eta4<-theta1/(1+exp(theta2*t_u+theta3))+rnorm(length(t_u),0,sqrt(sigma2))
m4<-nls(eta4~theta1/(1+exp(theta3+theta2*t_u)),
start=list(theta1=1, theta2=-9, theta3=6))
inf4[seed]<-(-coef(m4)[3]/coef(m4)[2]-6/9)^2
}
mean(inf1)
mean(inf2)
mean(inf3)
mean(inf4)
lengthout<-10
t<-seq(0.01,1,length.out =lengthout)
p<-length(t)
s<-t-c(0,t[-p])
rho=0.5
sigma2=0.01
eta1<-theta1/(1+exp(theta2*t_samp+theta3))+rnorm(length(t_samp),0,sqrt(sigma2))
plot(t_samp,eta1)
sigma2
plot(x,abs(drv1),ylim=c(0,20))
lines(x,abs(drv2),col=2)
for (i in 1:length(t_samp)){
abline(v=t_samp[i])
}
mean(inf1)
mean(inf2)
mean(inf3)
mean(inf4)
round(t_u,2)
round(t_samp,2)
lengthout<-9
t<-seq(0.01,1,length.out =lengthout)
p<-length(t)
s<-t-c(0,t[-p])
rho=0.5
sigma2=0.02^2
set.seed(1)
rs<-hjkb(c(rho,sigma2,s), opt,
lower=c(rho,sigma2,c(0,rep(0.05,length(s)-1))),
upper=c(rho,sigma2,rep(Inf,length(s))))
t_samp<-cumsum(rs$par[-c(1:2)])
t_u<-seq(0,1,length.out = lengthout)
round(t_u,2)
round(t_samp,2)
lengthout<-8
t<-seq(0.01,1,length.out =lengthout)
p<-length(t)
s<-t-c(0,t[-p])
rho=0.5
sigma2=0.02^2
set.seed(1)
rs<-hjkb(c(rho,sigma2,s), opt,
lower=c(rho,sigma2,c(0,rep(0.05,length(s)-1))),
upper=c(rho,sigma2,rep(Inf,length(s))))
t_samp<-cumsum(rs$par[-c(1:2)])
t_u<-seq(0,1,length.out = lengthout)
round(t_u,2)
round(t_samp,2)
lengthout<-7
t<-seq(0.01,1,length.out =lengthout)
p<-length(t)
s<-t-c(0,t[-p])
rho=0.5
sigma2=0.02^2
set.seed(1)
rs<-hjkb(c(rho,sigma2,s), opt,
lower=c(rho,sigma2,c(0,rep(0.05,length(s)-1))),
upper=c(rho,sigma2,rep(Inf,length(s))))
t_samp<-cumsum(rs$par[-c(1:2)])
t_u<-seq(0,1,length.out = lengthout)
round(t_u,2)
round(t_samp,2)
op <- par(mfrow = c(2,1),
oma = c(5,4,0,0) + 0.1,
mar = c(1,1,2,2) + 0.1)
plot(x,eta1,type="n")
lines(x,eta1)
lines(x,eta2,col=2)
theta1<-1
theta2<--10
theta3<-5
x<-seq(0,1,by=0.001)
f1 = expression(theta1/(1+exp(theta2*x+theta3)))
eta1<-theta1/(1+exp(theta2*x+theta3))
dx2x<-D(D(f1,"x"),"x")
drv1<-eval(dx2x)
theta1<-1
theta2<--9
theta3<-6
x<-seq(0,1,by=0.001)
f2 = expression(theta1/(1+exp(theta2*x+theta3)))
eta2<-theta1/(1+exp(theta2*x+theta3))
dx2x<-D(D(f2,"x"),"x")
drv2<-eval(dx2x)
p <- par(mfrow = c(2,1),
oma = c(5,4,0,0) + 0.1,
mar = c(1,1,2,2) + 0.1)
plot(x,eta1,type="n")
lines(x,eta1)
lines(x,eta2,col=2)
par(mfrow=c(2,1))
plot(x,eta,main="logistic curve",ylim=c(0,1),type="n",xaxt="n")
lines(x,eta)
op <- par(mfrow = c(2,1),
oma = c(5,4,0,0) + 0.1,
mar = c(1,1,2,2) + 0.1)
plot(x,eta1,main="two logistic curves",ylim=c(0,1),type="n",xaxt="n")
lines(x,eta1)
lines(x,eta2,col=2)
op <- par(mfrow = c(2,1),
oma = c(5,4,0,0) + 0.1,
mar = c(1,1,2,2) + 0.1)
plot(x,eta1,main="two logistic curves",ylim=c(0,1),type="n",xaxt="n")
lines(x,eta1)
lines(x,eta2,lty=2)
op <- par(mfrow = c(2,1),
oma = c(5,4,0,0) + 0.1,
mar = c(1,1,2,2) + 0.1)
plot(x,eta1,main="two logistic curves",ylim=c(0,1),type="n",xaxt="n")
lines(x,eta1)
lines(x,eta2,lty=2)
legend("bottomright",legend=c("curve1","curve2"),
lty=1:2,bty = "n")
plot(x,drv1^2,main="curvature^2",type="n",ylim=c(-15,90))
lines(x,drv1^2)
lines(x,drv2^2,lty=2)
plot(x,drv1^2,main="curvature^2",type="n",ylim=c(-15,100))
lines(x,drv1^2)
lines(x,drv2^2,lty=2)
par(mfrow=c(1,1))
plot(x,abs(drv1),ylim=c(0,20))
lines(x,abs(drv2),col=2)
plot(x,drv1^2,main="curvature^2",type="n",ylim=c(-15,100))
lines(x,drv1^2)
lines(x,drv2^2,lty=2)
lengthout<-6
t<-seq(0.01,1,length.out =lengthout)
p<-length(t)
s<-t-c(0,t[-p])
rho=0.5
sigma2=0.02^2
set.seed(1)
rs<-hjkb(c(rho,sigma2,s), opt,
lower=c(rho,sigma2,c(0,rep(0.05,length(s)-1))),
upper=c(rho,sigma2,rep(Inf,length(s))))
t_samp<-cumsum(rs$par[-c(1:2)])
t_u<-seq(0,1,length.out = lengthout)
lengthout<-8
t1<-seq(0.01,1,length.out =lengthout)
p1<-length(t1)
s1<-t1-c(0,t1[-p1])
rs1<-hjkb(c(rho,sigma2,s1), opt,
lower=c(rho,sigma2,c(0,rep(0.05,length(s1)-1))),
upper=c(rho,sigma2,rep(Inf,length(s1))))
t_samp1<-cumsum(rs1$par[-c(1:2)])
t_u1<-seq(0,1,length.out = lengthout)
bline(h=0,col="gray")
points(t_u,rep(0,6),pch=8)
abline(h=-5,col="gray")
points(t_samp,rep(-5,6),pch=15)
abline(h=-10,col="gray")
points(t_u1,rep(-10,8),pch=16)
abline(h=-15,col="gray")
points(t_samp1,rep(-15,8),pch=17)
abline(h=0,col="gray")
plot(x,drv1^2,main="curvature^2",type="n",ylim=c(-15,100))
lines(x,drv1^2)
lines(x,drv2^2,lty=2)
abline(h=0,col="gray")
points(t_u,rep(0,6),pch=8)
abline(h=-3,col="gray")
points(t_samp,rep(-5,6),pch=15)
abline(h=-12,col="gray")
points(t_u1,rep(-10,8),pch=16)
abline(h=-15,col="gray")
points(t_samp1,rep(-15,8),pch=17)
plot(x,drv1^2,main="curvature^2",type="n",ylim=c(-15,100))
lines(x,drv1^2)
lines(x,drv2^2,lty=2)
abline(h=0,col="gray")
points(t_u,rep(0,6),pch=8)
abline(h=-3,col="gray")
points(t_samp,rep(-3,6),pch=15)
abline(h=-12,col="gray")
points(t_u1,rep(-12,8),pch=16)
abline(h=-15,col="gray")
points(t_samp1,rep(-15,8),pch=17)
lengthout<-9
t1<-seq(0.01,1,length.out =lengthout)
p1<-length(t1)
s1<-t1-c(0,t1[-p1])
rs1<-hjkb(c(rho,sigma2,s1), opt,
lower=c(rho,sigma2,c(0,rep(0.05,length(s1)-1))),
upper=c(rho,sigma2,rep(Inf,length(s1))))
t_samp1<-cumsum(rs1$par[-c(1:2)])
t_u1<-seq(0,1,length.out = lengthout)
plot(x,drv1^2,main="curvature^2",type="n",ylim=c(-15,100))
lines(x,drv1^2)
lines(x,drv2^2,lty=2)
abline(h=0,col="gray")
points(t_u,rep(0,6),pch=8)
abline(h=-3,col="gray")
points(t_samp,rep(-3,6),pch=15)
abline(h=-12,col="gray")
points(t_u1,rep(-12,8),pch=16)
abline(h=-15,col="gray")
points(t_samp1,rep(-15,8),pch=17)
abline(h=-12,col="gray")
points(t_u1,rep(-12,9),pch=16)
abline(h=-15,col="gray")
points(t_samp1,rep(-15,9),pch=17)
legend("topright",legend=c("uniform",
expression(paste(rho,"=0.5;",sigma^2,"=0.1")),
expression(paste(rho,"=0.5;",sigma^2,"=1")),
expression(paste(rho,"=0.5;",sigma^2,"=5"))),
pch=c(8,15:17),cex=0.8,bty = "n")
legend("topright",legend=c("uniform, n=6","OD, n=6",
"uniform, n=9","OD, n=9")
pch=c(8,15:17),cex=0.8,bty = "n")
legend("topright",legend=c("uniform, n=6","OD, n=6",
"uniform, n=9","OD, n=9"),
pch=c(8,15:17),cex=0.8,bty = "n")
plot(x,drv1^2,main="curvature^2",type="n",ylim=c(-15,100))
lines(x,drv1^2)
lines(x,drv2^2,lty=2)
abline(h=0,col="gray")
points(t_u,rep(0,6),pch=8)
abline(h=-3,col="gray")
points(t_samp,rep(-3,6),pch=15)
abline(h=-12,col="gray")
points(t_u1,rep(-12,9),pch=16)
abline(h=-15,col="gray")
points(t_samp1,rep(-15,9),pch=17)
legend("topright",legend=c("uniform, n=6","OD, n=6",
"uniform, n=9","OD, n=9"),
pch=c(8,15:17),cex=0.8,bty = "n")
op <- par(mfrow = c(2,1),
oma = c(5,4,0,0) + 0.1,
mar = c(1,1,2,2) + 0.1)
plot(x,eta1,main="two logistic curves",ylim=c(0,1),type="n",xaxt="n")
lines(x,eta1)
lines(x,eta2,lty=2)
legend("bottomright",legend=c("curve1","curve2"),
lty=1:2,bty = "n")
plot(x,drv1^2,main="curvature^2",type="n",ylim=c(-15,100))
lines(x,drv1^2)
lines(x,drv2^2,lty=2)
abline(h=0,col="gray")
points(t_u,rep(0,6),pch=8)
abline(h=-3,col="gray")
points(t_samp,rep(-3,6),pch=15)
abline(h=-12,col="gray")
points(t_u1,rep(-12,9),pch=16)
abline(h=-15,col="gray")
points(t_samp1,rep(-15,9),pch=17)
legend("topright",legend=c("uniform, n=6","OD, n=6",
"uniform, n=9","OD, n=9"),
pch=c(8,15:17),cex=0.8,bty = "n")
devtools::install_github("jialiwang1211/GCMlasso")
devtools::install_github("jialiwang1211/GCMlasso")
library(GCMlasso)
?GCMlasso
rstudio::versionInfo()
version
library("INLA")
library("dplyr")
library("tidyr")
library("ggplot2")
library("STRbook")
data("MOcarolinawren_long", package = "STRbook")
## ------------------------------------------------------------------------
coords <- unique(MOcarolinawren_long[c("loc.ID", "lon", "lat")])
boundary <- inla.nonconvex.hull(as.matrix(coords[, 2:3]))
MOmesh <- inla.mesh.2d(boundary = boundary,
max.edge = c(0.8, 1.2), # max. edge length
cutoff = 0.1)           # min. edge length
coords
boundary
## ------------------------------------------------------------------------
MOmesh <- inla.mesh.2d(boundary = boundary,
max.edge = c(0.8, 1.2), # max. edge length
cutoff = 0.1)
plot(MOmesh,asp=1,main="");
lines(coords[c("lon","lat")],col="red",type="p")
plot(MOmesh, asp = 1, main = "")
lines(coords[c("lon", "lat")], col = "red", type = "p")
## ------------------------------------------------------------------------
spde <- inla.spde2.pcmatern(mesh = MOmesh,
alpha = 2,
prior.range = c(1, 0.01),
prior.sigma = c(4, 0.01))
n_years <- length(unique(MOcarolinawren_long$t))
n_spatial <- MOmesh$n
s_index <- inla.spde.make.index(name = "spatial.field",
n.spde = n_spatial,
n.group = n_years)
coords.allyear <- MOcarolinawren_long[c("lon", "lat")] %>%
as.matrix()
PHI <- inla.spde.make.A(mesh = MOmesh,
loc = coords.allyear,
group = MOcarolinawren_long$t,
n.group = n_years)
dim(PHI)
library("plyr")
library("dplyr")
library("IDE")
library("FRK")
library("ggplot2")
library("sp")
library("spacetime")
library("STRbook")
## ------------------------------------------------------------------------
SIM1 <- simIDE(T = 10, nobs = 100, k_spat_invariant = 1)
library("grid")
library("gridExtra")
SIM1 <- simIDE(T = 10, nobs = 100, k_spat_invariant = 1)
## Wikle, C. K., Zammit-Mangion, A., and Cressie, N. (2019),
## Spatio-Temporal Statistics with R, Boca Raton, FL: Chapman & Hall/CRC
## Copyright (c) 2019 Wikle, Zammit-Mangion, Cressie
##
## This program is free software; you can redistribute it and/or
## modify it under the terms of the GNU General Public License
## as published by the Free Software Foundation; either version 2
## of the License, or (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
library("plyr")
library("dplyr")
library("IDE")
library("FRK")
library("ggplot2")
library("sp")
library("spacetime")
library("STRbook")
library("grid")
library("gridExtra")
## ------------------------------------------------------------------------
SIM1 <- simIDE(T = 10, nobs = 100, k_spat_invariant = 1)
?simIDE
??simIDE
library(IDE)
install.packages("IDE")
library(IDE)
## ------------------------------------------------------------------------
SIM1 <- simIDE(T = 10, nobs = 100, k_spat_invariant = 1)
print(SIM1$g_truth)
print(SIM1$g_obs)
IDEmodel <- IDE(f = z ~ s1 + s2,
data = SIM1$z_STIDF,
dt = as.difftime(1, units = "days"),
grid_size = 41)
data("IDE_Sim1_results", package = "STRbook")
show_kernel(fit_results_sim1$IDEmodel)
fit_results_sim1$IDEmodel$get("k") %>% unlist()
coef(fit_results_sim1$IDEmodel)
abs_ev <- eigen(fit_results_sim1$IDEmodel$get("M"))$values %>%
abs()
summary(abs_ev)
ST_grid_df <- predict(fit_results_sim1$IDEmodel)
gpred <- ggplot(ST_grid_df) +       # Plot the predictions
geom_tile(aes(s1, s2, fill=Ypred)) +
facet_wrap(~t) +
fill_scale(name = "Ypred", limits = c(-0.1, 1.4)) +
coord_fixed(xlim=c(0, 1), ylim = c(0, 1))
gpredse <- ggplot(ST_grid_df) +     # Plot the prediction s.es
geom_tile(aes(s1, s2, fill = Ypredse)) +
facet_wrap(~t) +
fill_scale(name = "Ypredse") +
coord_fixed(xlim=c(0, 1), ylim = c(0, 1))
print(gpred)
print(gpredse)
library(GCMlasso)
data
data(Framingham)
load("Framingham.RData")
setwd("C:/Users/wan294/Desktop/Test/data")
load("Framingham.RData")
Framingham<-data
remove(data)
save(Framingham)
save(file=Framingham)
save(Framingham,file="Framingham.RData")
